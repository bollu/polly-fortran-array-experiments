; ModuleID = 'expander.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define i64 @_gfortran_polly_array_index_1(i64 %offset, i64 %stride1, i64 %ix1) #0 {
entry:
  %offset.addr = alloca i64, align 8
  %stride1.addr = alloca i64, align 8
  %ix1.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8
  store i64 %stride1, i64* %stride1.addr, align 8
  store i64 %ix1, i64* %ix1.addr, align 8
  %0 = load i64, i64* %offset.addr, align 8
  %1 = load i64, i64* %stride1.addr, align 8
  %2 = load i64, i64* %ix1.addr, align 8
  %mul = mul i64 %1, %2
  %add = add i64 %0, %mul
  ret i64 %add
}

; Function Attrs: nounwind uwtable
define i64 @_gfortran_polly_array_index_2(i64 %offset, i64 %stride1, i64 %stride2, i64 %ix1, i64 %ix2) #0 {
entry:
  %offset.addr = alloca i64, align 8
  %stride1.addr = alloca i64, align 8
  %stride2.addr = alloca i64, align 8
  %ix1.addr = alloca i64, align 8
  %ix2.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8
  store i64 %stride1, i64* %stride1.addr, align 8
  store i64 %stride2, i64* %stride2.addr, align 8
  store i64 %ix1, i64* %ix1.addr, align 8
  store i64 %ix2, i64* %ix2.addr, align 8
  %0 = load i64, i64* %offset.addr, align 8
  %1 = load i64, i64* %stride1.addr, align 8
  %2 = load i64, i64* %ix1.addr, align 8
  %mul = mul i64 %1, %2
  %add = add i64 %0, %mul
  %3 = load i64, i64* %stride2.addr, align 8
  %4 = load i64, i64* %ix2.addr, align 8
  %mul1 = mul i64 %3, %4
  %add2 = add i64 %add, %mul1
  ret i64 %add2
}

; Function Attrs: nounwind uwtable
define i64 @_gfortran_polly_array_index_3(i64 %offset, i64 %stride1, i64 %stride2, i64 %stride3, i64 %ix1, i64 %ix2, i64 %ix3) #0 {
entry:
  %offset.addr = alloca i64, align 8
  %stride1.addr = alloca i64, align 8
  %stride2.addr = alloca i64, align 8
  %stride3.addr = alloca i64, align 8
  %ix1.addr = alloca i64, align 8
  %ix2.addr = alloca i64, align 8
  %ix3.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8
  store i64 %stride1, i64* %stride1.addr, align 8
  store i64 %stride2, i64* %stride2.addr, align 8
  store i64 %stride3, i64* %stride3.addr, align 8
  store i64 %ix1, i64* %ix1.addr, align 8
  store i64 %ix2, i64* %ix2.addr, align 8
  store i64 %ix3, i64* %ix3.addr, align 8
  %0 = load i64, i64* %offset.addr, align 8
  %1 = load i64, i64* %stride1.addr, align 8
  %2 = load i64, i64* %ix1.addr, align 8
  %mul = mul i64 %1, %2
  %add = add i64 %0, %mul
  %3 = load i64, i64* %stride2.addr, align 8
  %4 = load i64, i64* %ix2.addr, align 8
  %mul1 = mul i64 %3, %4
  %add2 = add i64 %add, %mul1
  %5 = load i64, i64* %stride3.addr, align 8
  %6 = load i64, i64* %ix3.addr, align 8
  %mul3 = mul i64 %5, %6
  %add4 = add i64 %add2, %mul3
  ret i64 %add4
}

; Function Attrs: nounwind uwtable
define i64 @_gfortran_polly_array_index_4(i64 %offset, i64 %stride1, i64 %stride2, i64 %stride3, i64 %stride4, i64 %ix1, i64 %ix2, i64 %ix3, i64 %ix4) #0 {
entry:
  %offset.addr = alloca i64, align 8
  %stride1.addr = alloca i64, align 8
  %stride2.addr = alloca i64, align 8
  %stride3.addr = alloca i64, align 8
  %stride4.addr = alloca i64, align 8
  %ix1.addr = alloca i64, align 8
  %ix2.addr = alloca i64, align 8
  %ix3.addr = alloca i64, align 8
  %ix4.addr = alloca i64, align 8
  store i64 %offset, i64* %offset.addr, align 8
  store i64 %stride1, i64* %stride1.addr, align 8
  store i64 %stride2, i64* %stride2.addr, align 8
  store i64 %stride3, i64* %stride3.addr, align 8
  store i64 %stride4, i64* %stride4.addr, align 8
  store i64 %ix1, i64* %ix1.addr, align 8
  store i64 %ix2, i64* %ix2.addr, align 8
  store i64 %ix3, i64* %ix3.addr, align 8
  store i64 %ix4, i64* %ix4.addr, align 8
  %0 = load i64, i64* %offset.addr, align 8
  %1 = load i64, i64* %stride1.addr, align 8
  %2 = load i64, i64* %ix1.addr, align 8
  %mul = mul i64 %1, %2
  %add = add i64 %0, %mul
  %3 = load i64, i64* %stride2.addr, align 8
  %4 = load i64, i64* %ix2.addr, align 8
  %mul1 = mul i64 %3, %4
  %add2 = add i64 %add, %mul1
  %5 = load i64, i64* %stride3.addr, align 8
  %6 = load i64, i64* %ix3.addr, align 8
  %mul3 = mul i64 %5, %6
  %add4 = add i64 %add2, %mul3
  %7 = load i64, i64* %stride4.addr, align 8
  %8 = load i64, i64* %ix4.addr, align 8
  %mul5 = mul i64 %7, %8
  %add6 = add i64 %add4, %mul5
  ret i64 %add6
}

attributes #0 = { nounwind uwtable alwaysinline "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
