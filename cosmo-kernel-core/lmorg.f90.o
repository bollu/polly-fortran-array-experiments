; ModuleID = '/users/siddhart/playground/standalone/pp/lmorg.f90'
target datalayout = "e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.ident\09\22GCC: (GNU) 4.6.4 LLVM: 3.3.1\22"

%0 = type { i32 }
%1 = type { i32 }
%2 = type { i32, i32, [5 x i32] }
%3 = type { [5 x i32], [1 x i32] }
%4 = type { [1 x [1 x i8]], [1 x [1 x i8]] }
%struct.__st_parameter_dt = type { %struct.__st_parameter_common, i64, i64*, i64*, i8*, i8*, i32, i32, i8*, i8*, i32, i32, i8*, [256 x i8], i32*, i64, i8*, i32, i32, i8*, i8*, i32, i32, i8*, i8*, i32, i32, i8*, i8*, i32, [4 x i8] }
%struct.__st_parameter_common = type { i32, i32, i8*, i32, i32, i8*, i32* }

@mpifcmb5_ = common unnamed_addr global %0 zeroinitializer, align 16
@mpifcmb9_ = common unnamed_addr global %1 zeroinitializer, align 16
@mpipriv1_ = common unnamed_addr global %2 zeroinitializer, align 16
@mpipriv2_ = common unnamed_addr global %3 zeroinitializer, align 16
@mpiprivc_ = common unnamed_addr global %4 zeroinitializer, align 16
@__data_parallel_MOD_my_world_id = external global i32
@.cst = linker_private constant [51 x i8] c"/users/siddhart/playground/standalone/pp/lmorg.f90\00", align 64
@.cst1 = linker_private constant [1 x i8] c" ", align 8
@.cst2 = linker_private constant [18 x i8] c"STANDALONE PHYSICS", align 8
@.cst3 = linker_private constant [14 x i8] c"RUNNING ON CPU", align 8
@options.3.1629 = internal constant [8 x i32] [i32 68, i32 511, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1], align 32

; Function Attrs: nounwind uwtable
define internal void @MAIN__() #0 {
entry:
  %dt_parm.0 = alloca %struct.__st_parameter_dt
  %dt_parm.1 = alloca %struct.__st_parameter_dt
  %dt_parm.2 = alloca %struct.__st_parameter_dt
  %"alloca point" = bitcast i32 0 to i32
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  call void bitcast (void (...)* @__src_setup_MOD_organize_setup to void ()*)() #1
  %0 = load i32* @__data_parallel_MOD_my_world_id, align 4
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %"3", label %"4"

"3":                                              ; preds = %"2"
  %2 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.0, i32 0, i32 0
  %3 = getelementptr inbounds %struct.__st_parameter_common* %2, i32 0, i32 2
  store i8* getelementptr inbounds ([51 x i8]* @.cst, i64 0, i64 0), i8** %3, align 8
  %4 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.0, i32 0, i32 0
  %5 = getelementptr inbounds %struct.__st_parameter_common* %4, i32 0, i32 3
  store i32 60, i32* %5, align 8
  %6 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.0, i32 0, i32 0
  %7 = getelementptr inbounds %struct.__st_parameter_common* %6, i32 0, i32 0
  store i32 128, i32* %7, align 8
  %8 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.__st_parameter_common* %8, i32 0, i32 1
  store i32 6, i32* %9, align 4
  call void @_gfortran_st_write(%struct.__st_parameter_dt* %dt_parm.0) #1
  call void @_gfortran_transfer_character_write(%struct.__st_parameter_dt* %dt_parm.0, i8* getelementptr inbounds ([1 x i8]* @.cst1, i64 0, i64 0), i32 1) #1
  call void @_gfortran_st_write_done(%struct.__st_parameter_dt* %dt_parm.0) #1
  br label %"4"

"4":                                              ; preds = %"3", %"2"
  %10 = load i32* @__data_parallel_MOD_my_world_id, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %"5", label %"6"

"5":                                              ; preds = %"4"
  %12 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.1, i32 0, i32 0
  %13 = getelementptr inbounds %struct.__st_parameter_common* %12, i32 0, i32 2
  store i8* getelementptr inbounds ([51 x i8]* @.cst, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.1, i32 0, i32 0
  %15 = getelementptr inbounds %struct.__st_parameter_common* %14, i32 0, i32 3
  store i32 61, i32* %15, align 8
  %16 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.1, i32 0, i32 0
  %17 = getelementptr inbounds %struct.__st_parameter_common* %16, i32 0, i32 0
  store i32 128, i32* %17, align 8
  %18 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.1, i32 0, i32 0
  %19 = getelementptr inbounds %struct.__st_parameter_common* %18, i32 0, i32 1
  store i32 6, i32* %19, align 4
  call void @_gfortran_st_write(%struct.__st_parameter_dt* %dt_parm.1) #1
  call void @_gfortran_transfer_character_write(%struct.__st_parameter_dt* %dt_parm.1, i8* getelementptr inbounds ([18 x i8]* @.cst2, i64 0, i64 0), i32 18) #1
  call void @_gfortran_st_write_done(%struct.__st_parameter_dt* %dt_parm.1) #1
  br label %"6"

"6":                                              ; preds = %"5", %"4"
  %20 = load i32* @__data_parallel_MOD_my_world_id, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %"7", label %"8"

"7":                                              ; preds = %"6"
  %22 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.2, i32 0, i32 0
  %23 = getelementptr inbounds %struct.__st_parameter_common* %22, i32 0, i32 2
  store i8* getelementptr inbounds ([51 x i8]* @.cst, i64 0, i64 0), i8** %23, align 8
  %24 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.2, i32 0, i32 0
  %25 = getelementptr inbounds %struct.__st_parameter_common* %24, i32 0, i32 3
  store i32 65, i32* %25, align 8
  %26 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.2, i32 0, i32 0
  %27 = getelementptr inbounds %struct.__st_parameter_common* %26, i32 0, i32 0
  store i32 128, i32* %27, align 8
  %28 = getelementptr inbounds %struct.__st_parameter_dt* %dt_parm.2, i32 0, i32 0
  %29 = getelementptr inbounds %struct.__st_parameter_common* %28, i32 0, i32 1
  store i32 6, i32* %29, align 4
  call void @_gfortran_st_write(%struct.__st_parameter_dt* %dt_parm.2) #1
  call void @_gfortran_transfer_character_write(%struct.__st_parameter_dt* %dt_parm.2, i8* getelementptr inbounds ([14 x i8]* @.cst3, i64 0, i64 0), i32 14) #1
  call void @_gfortran_st_write_done(%struct.__st_parameter_dt* %dt_parm.2) #1
  br label %"8"

"8":                                              ; preds = %"7", %"6"
  call void bitcast (void (...)* @__src_physics_MOD_init_physics to void ()*)() #1
  call void bitcast (void (...)* @__src_physics_MOD_test_physics to void ()*)() #1
  call void bitcast (void (...)* @__src_physics_MOD_finalize_physics to void ()*)() #1
  call void bitcast (void (...)* @__environment_MOD_final_environment to void ()*)() #1
  br label %return

return:                                           ; preds = %"8"
  ret void
}

declare void @__src_setup_MOD_organize_setup(...)

declare void @_gfortran_st_write(%struct.__st_parameter_dt*)

declare void @_gfortran_transfer_character_write(%struct.__st_parameter_dt*, i8*, i32)

declare void @_gfortran_st_write_done(%struct.__st_parameter_dt*)

declare void @__src_physics_MOD_init_physics(...)

declare void @__src_physics_MOD_test_physics(...)

declare void @__src_physics_MOD_finalize_physics(...)

declare void @__environment_MOD_final_environment(...)

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) unnamed_addr #0 {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %"<retval>" = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr, align 1
  store i8** %argv, i8*** %argv_addr, align 1
  %0 = load i32* %argc_addr, align 4
  %1 = load i8*** %argv_addr, align 8
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  call void @_gfortran_set_args(i32 %0, i8** %1) #1
  call void @_gfortran_set_options(i32 8, i32* getelementptr inbounds ([8 x i32]* @options.3.1629, i64 0, i64 0)) #1
  call void @MAIN__() #0
  store i32 0, i32* %"<retval>", align 1
  br label %return

return:                                           ; preds = %"2"
  %2 = load i32* %"<retval>", align 4
  ret i32 %2
}

declare void @_gfortran_set_args(i32, i8**)

declare void @_gfortran_set_options(i32, i32*)

attributes #0 = { nounwind uwtable }
attributes #1 = { nounwind }
